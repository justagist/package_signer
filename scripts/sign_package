#! /usr/bin/env python3

import argparse
from package_signer import PackageSignatureGenerator
from package_signer.config import SIGNER_BASE_PATH


if __name__ == '__main__':

    parser = argparse.ArgumentParser(description="Add signature lines in all files (having extensions whose comment syntax is specified in config file) of a package.")
    parser.add_argument('destination', help = "Path to package that has to be signed.")
    parser.add_argument('--signature', '-s', help = "Path to file containing signature.", default = SIGNER_BASE_PATH+"/package_signer/config/sample_signature.txt")

    style_group = parser.add_mutually_exclusive_group()
    style_group.add_argument('--BLOCK', action = "store_true", help = "Sign using 'BLOCK' style")
    style_group.add_argument('--LINE', action = "store_true", help = "Sign using 'LINE' style (default)")

    parser.add_argument('--verbose', '-v', action = "store_true")
    parser.add_argument('--exclude','-x',nargs='+', help = "Space-separated files to be ignored during signing.")

    args = parser.parse_args()

    style = 'LINE'
    if args.BLOCK:
        style = "BLOCK"

    print("THIS",SIGNER_BASE_PATH)

    sign_gen = PackageSignatureGenerator(signature_file = args.signature, destination = args.destination, style = style, verbose = args.verbose, files_to_ignore = args.exclude)

    sign_gen.sign_package()

